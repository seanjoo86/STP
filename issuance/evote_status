import React, { useState } from 'react';
import { Search, X, AlertCircle } from 'lucide-react';

const VotingStatusPage = () => {
  const [selectedStock, setSelectedStock] = useState(null);
  const [showStockModal, setShowStockModal] = useState(false);
  const [votingInfo, setVotingInfo] = useState(null);
  const [successMessage, setSuccessMessage] = useState('');
  const [error, setError] = useState('');

  // 샘플 데이터
  const stocks = [
    { id: '1', name: '해외음악IP', symbol: 'MUS' },
    { id: '2', name: 'EV충전', symbol: 'EVC' }
  ];

  const sampleVotingInfo = {
    title: '신주 발행 및 대표이사 해임의 건',
    startDate: '2025-03-25',
    endDate: '2025-03-31',
    status: '진행 중',
    agendas: [
      {
        title: '신주발행의 건',
        votes: [
          { type: '찬성', count: 70 },
          { type: '반대', count: 20 },
          { type: '기권', count: 10 }
        ]
      },
      {
        title: '대표이사 해임의 건',
        votes: [
          { type: '찬성', count: 50 },
          { type: '반대', count: 40 },
          { type: '기권', count: 10 }
        ]
      }
    ]
  };

  const handleStockSelect = (stock) => {
    setSelectedStock(stock);
    setVotingInfo(sampleVotingInfo);
    setShowStockModal(false);
    setSuccessMessage('투표 현황 정보가 정상적으로 로드되었습니다.');
    setTimeout(() => setSuccessMessage(''), 3000);
  };

  const getVoteColor = (type) => {
    switch (type) {
      case '찬성': return 'bg-blue-500';
      case '반대': return 'bg-red-500';
      case '기권': return 'bg-gray-400';
      default: return 'bg-gray-200';
    }
  };

  const getStatusColor = (status) => {
    switch (status) {
      case '시작': return 'bg-green-100 text-green-800';
      case '진행 중': return 'bg-blue-100 text-blue-800';
      case '종료': return 'bg-gray-100 text-gray-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-4xl mx-auto">
        {/* 헤더 */}
        <h1 className="text-2xl font-bold text-center mb-8">전자투표 현황</h1>

        <div className="bg-white rounded-lg shadow p-6 space-y-6">
          {/* 메시지 표시 */}
          {successMessage && (
            <div className="p-4 bg-green-50 text-green-700 rounded-md flex items-center gap-2">
              <AlertCircle className="h-5 w-5" />
              {successMessage}
            </div>
          )}

          {error && (
            <div className="p-4 bg-red-50 text-red-700 rounded-md flex items-center gap-2">
              <AlertCircle className="h-5 w-5" />
              {error}
            </div>
          )}

          {/* 종목 선택 */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">종목 선택</label>
            <div className="flex gap-2">
              <input
                type="text"
                value={selectedStock?.name || ''}
                readOnly
                className="flex-1 p-2 border rounded bg-gray-50"
                placeholder="종목을 선택해주세요"
              />
              <button
                type="button"
                onClick={() => setShowStockModal(true)}
                className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 flex items-center gap-2"
              >
                <Search className="h-4 w-4" />
                찾아보기
              </button>
            </div>
          </div>

          {/* 투표 정보 */}
          {votingInfo && (
            <div className="space-y-6">
              {/* 기본 정보 */}
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">투표 안건</label>
                  <input
                    type="text"
                    value={votingInfo.title}
                    readOnly
                    className="w-full p-2 border rounded bg-gray-50"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">투표 상태</label>
                  <span className={`inline-block px-3 py-1 rounded-full text-sm ${getStatusColor(votingInfo.status)}`}>
                    {votingInfo.status}
                  </span>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">시작일</label>
                  <input
                    type="text"
                    value={votingInfo.startDate}
                    readOnly
                    className="w-full p-2 border rounded bg-gray-50"
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">종료일</label>
                  <input
                    type="text"
                    value={votingInfo.endDate}
                    readOnly
                    className="w-full p-2 border rounded bg-gray-50"
                  />
                </div>
              </div>

              {/* 투표 결과 차트 */}
              <div className="space-y-6">
                <h3 className="text-lg font-medium">투표 안건별 경과</h3>
                {votingInfo.agendas.map((agenda, index) => (
                  <div key={index} className="p-4 border rounded-lg space-y-4">
                    <h4 className="font-medium">{agenda.title}</h4>
                    <div className="space-y-3">
                      {agenda.votes.map((vote, voteIndex) => (
                        <div key={voteIndex} className="space-y-1">
                          <div className="flex justify-between text-sm">
                            <span>{vote.type}</span>
                            <span>{vote.count}%</span>
                          </div>
                          <div className="h-4 bg-gray-100 rounded">
                            <div
                              className={`h-full rounded ${getVoteColor(vote.type)}`}
                              style={{ width: `${vote.count}%` }}
                            />
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {/* 닫기 버튼 */}
          <div className="flex justify-center pt-6">
            <button
              onClick={() => window.history.back()}
              className="px-6 py-2 bg-gray-600 text-white rounded hover:bg-gray-700"
            >
              닫기
            </button>
          </div>
        </div>

        {/* 종목 선택 모달 */}
        {showStockModal && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg w-full max-w-md p-6">
              <div className="flex justify-between items-center mb-4">
                <h2 className="text-lg font-semibold">종목 선택</h2>
                <button
                  onClick={() => setShowStockModal(false)}
                  className="text-gray-500 hover:text-gray-700"
                >
                  <X className="h-6 w-6" />
                </button>
              </div>
              <div className="space-y-2">
                {stocks.map(stock => (
                  <button
                    key={stock.id}
                    className="w-full p-3 text-left hover:bg-gray-50 rounded-md flex justify-between items-center"
                    onClick={() => handleStockSelect(stock)}
                  >
                    <span className="font-medium">{stock.name}</span>
                    <span className="text-gray-500">{stock.symbol}</span>
                  </button>
                ))}
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default VotingStatusPage;

// 전자투표 현황
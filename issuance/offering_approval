import React, { useState } from 'react';
import { Download, AlertCircle, X } from 'lucide-react';

const OfferingApprovalPage = () => {
  const [filters, setFilters] = useState({
    issuer: '',
    stock: ''
  });

  const [selectedOffering, setSelectedOffering] = useState(null);
  const [showDetail, setShowDetail] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');

  // 수정된 샘플 데이터
  const issuers = [
    { id: '1', name: '뮤직카우' },
    { id: '2', name: '차지인' },
    { id: '3', name: '파이브노드' }
  ];

  const stocks = [
    { id: '1', name: 'BTS-Butter', symbol: 'BTS' },
    { id: '2', name: 'TWICE-YES or YES', symbol: 'TWI' },
    { id: '3', name: 'Taylor Swift - Cruel Summer', symbol: 'CRUS' }
  ];

  const offerings = [
    {
      id: '1',
      subscriptionStart: '2025-02-28',
      subscriptionEnd: '2025-03-06',
      stockName: 'Taylor Swift - Cruel Summer',
      symbol: 'CRUS',
      totalAmount: 1000000000,
      unitAmount: 5000,
      issueQuantity: 200000,
      paymentDate: '2025-03-06',
      noticeDate: '2025-02-27',
      allocationDate: '2025-03-07',
      allocationMethod: '비례',
      status: '승인 전',
      file: 'prospectus.pdf'
    }
  ];

  const handleApprove = (offeringId) => {
    if (window.confirm('선택한 공모를 승인하시겠습니까?')) {
      console.log('Offering approved:', offeringId);
      setSuccessMessage('공모 정보가 성공적으로 승인되었습니다.');
      setTimeout(() => setSuccessMessage(''), 3000);
    }
  };

  const formatNumber = (num) => {
    return new Intl.NumberFormat('ko-KR').format(num);
  };

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-7xl mx-auto">
        <h1 className="text-2xl font-bold mb-8 text-center">공모 승인</h1>
        
        {/* 필터 영역 */}
        <div className="bg-white rounded-lg shadow p-6 mb-6">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                발행인 선택
              </label>
              <select
                value={filters.issuer}
                onChange={(e) => setFilters({...filters, issuer: e.target.value})}
                className="w-full p-2 border rounded"
              >
                <option value="">전체</option>
                {issuers.map(issuer => (
                  <option key={issuer.id} value={issuer.id}>{issuer.name}</option>
                ))}
              </select>
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                종목 선택
              </label>
              <select
                value={filters.stock}
                onChange={(e) => setFilters({...filters, stock: e.target.value})}
                className="w-full p-2 border rounded"
              >
                <option value="">전체</option>
                {stocks.map(stock => (
                  <option key={stock.id} value={stock.id}>{stock.name}</option>
                ))}
              </select>
            </div>
            <div className="flex items-end">
              <button
                onClick={() => console.log('Search with filters:', filters)}
                className="w-full bg-blue-600 text-white p-2 rounded hover:bg-blue-700"
              >
                검색
              </button>
            </div>
          </div>
        </div>

        {/* 성공 메시지 */}
        {successMessage && (
          <div className="mb-4 p-4 bg-green-50 text-green-700 rounded-md flex items-center gap-2">
            <AlertCircle className="h-5 w-5" />
            {successMessage}
          </div>
        )}

        {/* 테이블 */}
        <div className="bg-white rounded-lg shadow overflow-hidden">
          <div className="overflow-x-auto">
            <table className="min-w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">청약기간</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">종목정보</th>
                  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">공모정보</th>
                  <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">주요일정</th>
                  <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">배정방법</th>
                  <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">상태</th>
                  <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">작업</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {offerings.map((offering) => (
                  <tr 
                    key={offering.id}
                    onClick={() => {
                      setSelectedOffering(offering);
                      setShowDetail(true);
                    }}
                    className="hover:bg-gray-50 cursor-pointer"
                  >
                    <td className="px-6 py-4">
                      <div className="text-sm text-gray-900">
                        {offering.subscriptionStart} ~
                      </div>
                      <div className="text-sm text-gray-900">
                        {offering.subscriptionEnd}
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="text-sm font-medium text-gray-900">
                        {offering.stockName}
                      </div>
                      <div className="text-sm text-gray-500">
                        {offering.symbol}
                      </div>
                    </td>
                    <td className="px-6 py-4 text-right">
                      <div className="text-sm text-gray-900">
                        총액: {formatNumber(offering.totalAmount)}원
                      </div>
                      <div className="text-sm text-gray-500">
                        단위: {formatNumber(offering.unitAmount)}원
                      </div>
                      <div className="text-sm text-gray-500">
                        수량: {formatNumber(offering.issueQuantity)}개
                      </div>
                    </td>
                    <td className="px-6 py-4">
                      <div className="text-sm text-gray-900">
                        공고: {offering.noticeDate}
                      </div>
                      <div className="text-sm text-gray-500">
                        납입: {offering.paymentDate}
                      </div>
                      <div className="text-sm text-gray-500">
                        배정: {offering.allocationDate}
                      </div>
                    </td>
                    <td className="px-6 py-4 text-center">
                      <span className="text-sm text-gray-900">
                        {offering.allocationMethod}
                      </span>
                    </td>
                    <td className="px-6 py-4 text-sm text-gray-900">
                      승인 전
                    </td>
                    <td className="px-6 py-4 text-center">
                      <button
                        onClick={(e) => {
                          e.stopPropagation();
                          handleApprove(offering.id);
                        }}
                        className="text-sm bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700"
                      >
                        승인
                      </button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          {/* 페이지네이션 */}
          <div className="bg-white px-4 py-3 border-t border-gray-200 flex items-center justify-between">
            <div className="flex-1 flex justify-center">
              <nav className="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                <button className="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  이전
                </button>
                <button className="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700">
                  1
                </button>
                <button className="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                  다음
                </button>
              </nav>
            </div>
          </div>
        </div>

        {/* 상세 정보 모달 */}
        {showDetail && selectedOffering && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
            <div className="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-y-auto">
              <div className="p-6">
                <div className="flex justify-between items-center mb-6">
                  <h2 className="text-2xl font-bold">공모 상세 정보</h2>
                  <button
                    onClick={() => setShowDetail(false)}
                    className="text-gray-500 hover:text-gray-700"
                  >
                    <X className="h-6 w-6" />
                  </button>
                </div>

                <div className="grid grid-cols-2 gap-6">
                  <div>
                    <h3 className="font-semibold mb-2">종목 정보</h3>
                    <div className="space-y-2">
                      <p>종목명: {selectedOffering.stockName}</p>
                      <p>심볼: {selectedOffering.symbol}</p>
                    </div>
                  </div>

                  <div>
                    <h3 className="font-semibold mb-2">공모 정보</h3>
                    <div className="space-y-2">
                      <p>총 공모가액: {formatNumber(selectedOffering.totalAmount)}원</p>
                      <p>단위당 공모가액: {formatNumber(selectedOffering.unitAmount)}원</p>
                      <p>발행 수량: {formatNumber(selectedOffering.issueQuantity)}개</p>
                    </div>
                  </div>

                  <div>
                    <h3 className="font-semibold mb-2">청약 정보</h3>
                    <div className="space-y-2">
                      <p>청약 시작일: {selectedOffering.subscriptionStart}</p>
                      <p>청약 종료일: {selectedOffering.subscriptionEnd}</p>
                      <p>배정 방법: {selectedOffering.allocationMethod}</p>
                    </div>
                  </div>

                  <div>
                    <h3 className="font-semibold mb-2">주요 일정</h3>
                    <div className="space-y-2">
                      <p>청약공고일: {selectedOffering.noticeDate}</p>
                      <p>납입기일: {selectedOffering.paymentDate}</p>
                      <p>배정공고일: {selectedOffering.allocationDate}</p>
                    </div>
                  </div>
                </div>

                <div className="mt-6">
                  <h3 className="font-semibold mb-2">첨부 파일</h3>
                  <button className="flex items-center text-blue-600 hover:text-blue-800">
                    <Download className="h-5 w-5 mr-2" />
                    증권신고서
                  </button>
                </div>

                <div className="mt-6 flex justify-end">
                  <button
                    onClick={() => handleApprove(selectedOffering.id)}
                    className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700"
                  >
                    승인
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default OfferingApprovalPage;

// 공모 승인
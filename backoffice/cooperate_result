import React, { useState } from 'react';

const ResultPublication = () => {
  const [formData, setFormData] = useState({
    result: '',
    content: '',
  });
  const [status, setStatus] = useState({ type: '', message: '' });

  const resultOptions = ['완료', '반려', '미결', '기타'];

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const isFormValid = () => {
    return formData.result && formData.content.trim();
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (!isFormValid()) {
      setStatus({
        type: 'error',
        message: '처리 결과와 처리 내용을 모두 입력해주세요.'
      });
      return;
    }

    // 실제 구현에서는 API 호출
    setStatus({
      type: 'success',
      message: '결과가 성공적으로 공표되었습니다.'
    });
  };

  return (
    <div className="p-6 max-w-4xl mx-auto">
      <h1 className="text-2xl font-bold text-center mb-8">결과 공표</h1>

      {/* 상태 메시지 */}
      {status.message && (
        <div className={`mb-6 p-4 rounded ${
          status.type === 'success' ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'
        }`}>
          {status.message}
        </div>
      )}

      <form onSubmit={handleSubmit} className="space-y-6">
        {/* 처리 결과 */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            처리 결과 *
          </label>
          <select
            name="result"
            value={formData.result}
            onChange={handleInputChange}
            className="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            required
          >
            <option value="">선택하세요</option>
            {resultOptions.map(option => (
              <option key={option} value={option}>{option}</option>
            ))}
          </select>
        </div>

        {/* 처리 내용 */}
        <div>
          <label className="block text-sm font-medium text-gray-700 mb-2">
            처리 내용 *
          </label>
          <textarea
            name="content"
            value={formData.content}
            onChange={handleInputChange}
            rows={6}
            className="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
            placeholder="처리 내용을 입력하세요."
            required
          />
        </div>

        {/* 최종 공표 버튼 */}
        <div className="flex justify-center pt-4">
          <button
            type="submit"
            disabled={!isFormValid()}
            className={`px-6 py-3 rounded text-white font-medium ${
              isFormValid()
                ? 'bg-blue-500 hover:bg-blue-600'
                : 'bg-gray-300 cursor-not-allowed'
            }`}
          >
            최종 공표
          </button>
        </div>
      </form>
    </div>
  );
};

export default ResultPublication;

// 협업 결과 공표
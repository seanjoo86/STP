import React, { useState } from 'react';
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogFooter,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";

const CorporateCustomerManagement = () => {
  const [isDialogOpen, setIsDialogOpen] = useState(false);
  const [selectedItem, setSelectedItem] = useState(null);
  const [searchTerm, setSearchTerm] = useState('');
  const [searchField, setSearchField] = useState('companyName');

  // 샘플 데이터
  const tableData = [
    {
      id: 1,
      companyName: "ABC 주식회사",
      businessNumber: "123-45-67890",
      representative: "김대표",
      registrationDate: "2024-01-15",
      sector: "제조업",
      employeeCount: "150",
      annualRevenue: "50억",
      address: "서울특별시 강남구 테헤란로 123",
      status: "승인 전",
      issuerData: {
        name: "홍길동",
        department: "영업1팀",
        position: "팀장",
        contact: "010-1234-5678",
        email: "hong@abc.com",
        memo: "신규 거래처 등록 요청",
        attachments: ["사업자등록증.pdf", "재무제표.xlsx"]
      }
    },
    {
      id: 2,
      companyName: "XYZ 물산",
      businessNumber: "234-56-78901",
      representative: "이사장",
      registrationDate: "2024-01-16",
      sector: "도소매업",
      employeeCount: "75",
      annualRevenue: "30억",
      address: "서울특별시 강서구 공항대로 456",
      status: "승인 전",
      issuerData: {
        name: "김담당",
        department: "영업2팀",
        position: "대리",
        contact: "010-2345-6789",
        email: "kim@xyz.com",
        memo: "기존 거래처 정보 갱신",
        attachments: ["갱신서류.pdf"]
      }
    }
  ];

  const handleApprovalClick = (item) => {
    setSelectedItem(item);
    setIsDialogOpen(true);
  };

  const handleApprove = () => {
    console.log("승인됨:", selectedItem);
    setIsDialogOpen(false);
  };

  const handleReject = () => {
    console.log("거절됨:", selectedItem);
    setIsDialogOpen(false);
  };

  const filteredData = tableData.filter(item => {
    const searchValue = item[searchField]?.toLowerCase() || '';
    return searchValue.includes(searchTerm.toLowerCase());
  });

  return (
    <div className="container mx-auto p-6">
      <h1 className="text-2xl font-bold mb-6">법인고객 정보 관리</h1>
      
      {/* 검색 영역 */}
      <div className="flex gap-4 mb-6">
        <Select
          value={searchField}
          onValueChange={setSearchField}
          className="w-[200px]"
        >
          <SelectTrigger>
            <SelectValue placeholder="검색 필드 선택" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="companyName">회사명</SelectItem>
            <SelectItem value="businessNumber">사업자번호</SelectItem>
            <SelectItem value="representative">대표자</SelectItem>
          </SelectContent>
        </Select>
        <Input
          type="text"
          placeholder="검색어를 입력하세요"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          className="w-[300px]"
        />
      </div>

      {/* 테이블 */}
      <div className="border rounded-lg overflow-x-auto">
        <table className="min-w-full divide-y divide-gray-200">
          <thead className="bg-gray-50">
            <tr>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[180px]">
                회사명
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[150px]">
                사업자번호
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[100px]">
                대표자
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[120px]">
                등록일
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[100px]">
                업종
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[100px]">
                직원수
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[100px]">
                매출액
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[250px]">
                주소
              </th>
              <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-[100px]">
                상태
              </th>
            </tr>
          </thead>
          <tbody className="bg-white divide-y divide-gray-200">
            {filteredData.map((item) => (
              <tr key={item.id} className="hover:bg-gray-50">
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {item.companyName}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {item.businessNumber}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {item.representative}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {item.registrationDate}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {item.sector}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {item.employeeCount}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  {item.annualRevenue}
                </td>
                <td className="px-6 py-4 text-sm text-gray-900 truncate max-w-[250px]" title={item.address}>
                  {item.address}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                  <button
                    className="text-blue-600 hover:text-blue-800 hover:underline"
                    onClick={() => handleApprovalClick(item)}
                  >
                    {item.status}
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>

      {/* 승인 검토 다이얼로그 */}
      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>
        <DialogContent className="max-w-[700px]">
          <DialogHeader>
            <DialogTitle className="text-xl font-bold">승인 검토</DialogTitle>
          </DialogHeader>
          
          {selectedItem && (
            <div className="grid gap-6">
              {/* 회사 정보 섹션 */}
              <div>
                <h3 className="font-semibold mb-4 text-lg">회사 정보</h3>
                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <p><span className="font-medium">회사명:</span> {selectedItem.companyName}</p>
                    <p><span className="font-medium">사업자번호:</span> {selectedItem.businessNumber}</p>
                    <p><span className="font-medium">대표자:</span> {selectedItem.representative}</p>
                    <p><span className="font-medium">등록일:</span> {selectedItem.registrationDate}</p>
                  </div>
                  <div className="space-y-2">
                    <p><span className="font-medium">업종:</span> {selectedItem.sector}</p>
                    <p><span className="font-medium">직원수:</span> {selectedItem.employeeCount}</p>
                    <p><span className="font-medium">매출액:</span> {selectedItem.annualRevenue}</p>
                    <p><span className="font-medium">주소:</span> {selectedItem.address}</p>
                  </div>
                </div>
              </div>

              {/* 발행인 정보 섹션 */}
              <div>
                <h3 className="font-semibold mb-4 text-lg">발행인 정보</h3>
                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <p><span className="font-medium">이름:</span> {selectedItem.issuerData.name}</p>
                    <p><span className="font-medium">부서:</span> {selectedItem.issuerData.department}</p>
                    <p><span className="font-medium">직책:</span> {selectedItem.issuerData.position}</p>
                  </div>
                  <div className="space-y-2">
                    <p><span className="font-medium">연락처:</span> {selectedItem.issuerData.contact}</p>
                    <p><span className="font-medium">이메일:</span> {selectedItem.issuerData.email}</p>
                  </div>
                </div>
              </div>

              {/* 메모 및 첨부파일 섹션 */}
              <div>
                <h3 className="font-semibold mb-4 text-lg">추가 정보</h3>
                <div className="space-y-4">
                  <div>
                    <p className="font-medium mb-2">메모</p>
                    <p className="bg-gray-50 p-3 rounded">{selectedItem.issuerData.memo}</p>
                  </div>
                  <div>
                    <p className="font-medium mb-2">첨부파일</p>
                    <ul className="list-disc list-inside">
                      {selectedItem.issuerData.attachments.map((file, index) => (
                        <li key={index} className="text-blue-600 hover:underline cursor-pointer">
                          {file}
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          )}

          <DialogFooter>
            <div className="flex gap-2">
              <Button variant="outline" onClick={handleReject}>
                거절
              </Button>
              <Button onClick={handleApprove}>
                승인
              </Button>
            </div>
          </DialogFooter>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default CorporateCustomerManagement;

// 법인고객 정보 관리
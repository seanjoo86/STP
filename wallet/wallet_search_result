import React, { useState } from 'react';
import { Calendar } from "lucide-react";

const CustomerAccountManagement = () => {
  const [searchParams, setSearchParams] = useState({
    customerName: '',
    accountNumber: '',
    status: '',
    startDate: '',
    endDate: ''
  });
  
  const [showDetail, setShowDetail] = useState(false);
  const [selectedAccount, setSelectedAccount] = useState(null);
  const [selectedAccounts, setSelectedAccounts] = useState(new Set());
  const [showReasonModal, setShowReasonModal] = useState(false);
  const [selectedReason, setSelectedReason] = useState('');
  const [showSuccessMessage, setShowSuccessMessage] = useState('');

  // 샘플 데이터 업데이트
  const accounts = [
    {
      id: "550e8400-e29b-41d4-a716-446655440000",
      customerName: "홍길동",
      accountNumber: "123-456-789",
      walletAddress: "0x1234...5678",
      status: "활성화",
      totalBalance: 15000000,
      recentTransactions: [
        { date: "2024-01-02", amount: 50000, type: "입금" },
        { date: "2024-01-01", amount: 30000, type: "출금" }
      ]
    },
    {
      id: "550e8400-e29b-41d4-a716-446655440001",
      customerName: "김철수",
      accountNumber: "123-456-790",
      walletAddress: "0x5678...9012",
      status: "정지",
      totalBalance: 8500000,
      recentTransactions: []
    }
  ];

  // ... 기존 이벤트 핸들러 코드 유지 ...

  return (
    <div className="p-6 max-w-7xl mx-auto space-y-6">
      {/* 검색 필터 섹션 */}
      <div className="bg-white rounded-lg shadow-sm p-6">
        {/* ... 기존 검색 필터 코드 유지 ... */}
      </div>

      {/* 검색 결과 테이블 */}
      <div className="bg-white rounded-lg shadow-sm p-6">
        <div className="flex justify-between items-center mb-4">
          <div className="space-x-4">
            <h2 className="text-xl font-semibold inline-block">검색 결과</h2>
            <span className="text-sm text-gray-500">
              선택된 계좌: {selectedAccounts.size}개
            </span>
          </div>
          <div className="space-x-4">
            {selectedAccounts.size > 0 && (
              <button
                className="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700"
                onClick={handleSuspendAccounts}
              >
                계좌 정지
              </button>
            )}
            <select
              className="px-3 py-2 border rounded-md"
              onChange={(e) => handleDownload(e.target.value)}
            >
              <option value="">다운로드 형식 선택</option>
              <option value="csv">CSV 다운로드</option>
              <option value="excel">Excel 다운로드</option>
            </select>
          </div>
        </div>

        {showSuccessMessage && (
          <div className="mb-4 p-4 bg-green-100 text-green-700 rounded-md">
            {showSuccessMessage}
          </div>
        )}

        <div className="overflow-x-auto">
          <table className="min-w-full">
            <thead className="bg-gray-50">
              <tr>
                <th className="w-8 px-6 py-3">
                  <input
                    type="checkbox"
                    onChange={() => {
                      const allIds = accounts.map(acc => acc.id);
                      setSelectedAccounts(
                        selectedAccounts.size === accounts.length
                          ? new Set()
                          : new Set(allIds)
                      );
                    }}
                    checked={selectedAccounts.size === accounts.length}
                  />
                </th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">고객명</th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">계좌번호</th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">대표지갑주소</th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">상태</th>
                <th className="px-6 py-3 text-right text-sm font-medium text-gray-500">총 평가금액</th>
                <th className="px-6 py-3 text-center text-sm font-medium text-gray-500">작업</th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-200">
              {accounts.map((account) => (
                <tr key={account.id}>
                  <td className="px-6 py-4">
                    <input
                      type="checkbox"
                      checked={selectedAccounts.has(account.id)}
                      onChange={() => handleAccountSelect(account.id)}
                    />
                  </td>
                  <td className="px-6 py-4 text-sm">{account.customerName}</td>
                  <td className="px-6 py-4 text-sm">{account.accountNumber}</td>
                  <td className="px-6 py-4 text-sm font-mono">
                    {account.walletAddress}
                  </td>
                  <td className="px-6 py-4 text-sm">
                    <span className={`px-2 py-1 rounded-full text-xs ${
                      account.status === '정지' ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'
                    }`}>
                      {account.status}
                    </span>
                  </td>
                  <td className="px-6 py-4 text-sm text-right">
                    {account.totalBalance.toLocaleString()}원
                  </td>
                  <td className="px-6 py-4 text-sm text-center space-x-2">
                    <button
                      className="text-blue-600 hover:text-blue-800"
                      onClick={() => {
                        setSelectedAccount(account);
                        setShowDetail(true);
                      }}
                    >
                      상세보기
                    </button>
                    {account.status === '정지' && (
                      <button
                        className="text-purple-600 hover:text-purple-800"
                        onClick={() => handleRequestApproval(account.id)}
                      >
                        승인요청
                      </button>
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* ... 기존 모달 코드 유지 ... */}
    </div>
  );
};

export default CustomerAccountManagement;

// 지갑검색 결과
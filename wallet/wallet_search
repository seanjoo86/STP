import React, { useState } from 'react';
import { Calendar } from "lucide-react";

const CustomerAccountManagement = () => {
  const [searchParams, setSearchParams] = useState({
    customerName: '',
    accountNumber: '',
    status: '',
    startDate: '',
    endDate: ''
  });
  
  const [showDetail, setShowDetail] = useState(false);
  const [selectedAccount, setSelectedAccount] = useState(null);

  // 샘플 데이터
  const accounts = [
    {
      id: "550e8400-e29b-41d4-a716-446655440000",
      customerName: "홍길동",
      accountNumber: "123-456-789",
      status: "활성화",
      registrationDate: "2024-01-01",
      recentTransactions: [
        { date: "2024-01-02", amount: 50000, type: "입금" },
        { date: "2024-01-01", amount: 30000, type: "출금" }
      ]
    }
  ];

  const handleSearch = () => {
    console.log("Searching with params:", searchParams);
  };

  const handleDownload = (format) => {
    console.log(`Downloading in ${format} format`);
  };

  const handleReset = () => {
    setSearchParams({
      customerName: '',
      accountNumber: '',
      status: '',
      startDate: '',
      endDate: ''
    });
  };

  return (
    <div className="p-6 max-w-7xl mx-auto space-y-6">
      {/* 검색 필터 섹션 */}
      <div className="bg-white rounded-lg shadow-sm p-6">
        <h2 className="text-xl font-semibold mb-4">고객 계정 검색</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
          <div className="space-y-2">
            <label className="text-sm font-medium">고객명</label>
            <input
              type="text"
              className="w-full px-3 py-2 border rounded-md"
              value={searchParams.customerName}
              onChange={(e) => setSearchParams({...searchParams, customerName: e.target.value})}
              placeholder="고객명을 입력하세요"
            />
          </div>
          <div className="space-y-2">
            <label className="text-sm font-medium">계좌번호</label>
            <input
              type="text"
              className="w-full px-3 py-2 border rounded-md"
              value={searchParams.accountNumber}
              onChange={(e) => setSearchParams({...searchParams, accountNumber: e.target.value})}
              placeholder="계좌번호를 입력하세요"
            />
          </div>
          <div className="space-y-2">
            <label className="text-sm font-medium">계정 상태</label>
            <select
              className="w-full px-3 py-2 border rounded-md"
              value={searchParams.status}
              onChange={(e) => setSearchParams({...searchParams, status: e.target.value})}
            >
              <option value="">상태 선택</option>
              <option value="active">활성화</option>
              <option value="inactive">비활성화</option>
            </select>
          </div>
          <div className="space-y-2">
            <label className="text-sm font-medium">등록일 시작</label>
            <div className="relative">
              <input
                type="date"
                className="w-full px-3 py-2 border rounded-md"
                value={searchParams.startDate}
                onChange={(e) => setSearchParams({...searchParams, startDate: e.target.value})}
              />
              <Calendar className="absolute right-3 top-2.5 h-4 w-4 text-gray-500" />
            </div>
          </div>
          <div className="space-y-2">
            <label className="text-sm font-medium">등록일 종료</label>
            <div className="relative">
              <input
                type="date"
                className="w-full px-3 py-2 border rounded-md"
                value={searchParams.endDate}
                onChange={(e) => setSearchParams({...searchParams, endDate: e.target.value})}
              />
              <Calendar className="absolute right-3 top-2.5 h-4 w-4 text-gray-500" />
            </div>
          </div>
        </div>
        <div className="flex justify-end space-x-4 mt-6">
          <button
            className="px-4 py-2 border rounded-md hover:bg-gray-50"
            onClick={handleReset}
          >
            초기화
          </button>
          <button
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"
            onClick={handleSearch}
          >
            검색
          </button>
        </div>
      </div>

      {/* 검색 결과 테이블 */}
      <div className="bg-white rounded-lg shadow-sm p-6">
        <div className="flex justify-between items-center mb-4">
          <h2 className="text-xl font-semibold">검색 결과</h2>
          <select
            className="px-3 py-2 border rounded-md"
            onChange={(e) => handleDownload(e.target.value)}
          >
            <option value="">다운로드 형식 선택</option>
            <option value="csv">CSV 다운로드</option>
            <option value="excel">Excel 다운로드</option>
          </select>
        </div>
        <div className="overflow-x-auto">
          <table className="min-w-full">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">고객명</th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">계좌번호</th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">상태</th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">등록일</th>
                <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">상세보기</th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-200">
              {accounts.map((account) => (
                <tr key={account.id}>
                  <td className="px-6 py-4 text-sm">{account.customerName}</td>
                  <td className="px-6 py-4 text-sm">{account.accountNumber}</td>
                  <td className="px-6 py-4 text-sm">{account.status}</td>
                  <td className="px-6 py-4 text-sm">{account.registrationDate}</td>
                  <td className="px-6 py-4 text-sm">
                    <button
                      className="text-blue-600 hover:text-blue-800"
                      onClick={() => {
                        setSelectedAccount(account);
                        setShowDetail(true);
                      }}
                    >
                      상세보기
                    </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* 상세 정보 모달 */}
      {showDetail && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4">
          <div className="bg-white rounded-lg max-w-3xl w-full p-6">
            <div className="flex justify-between items-center mb-4">
              <h2 className="text-xl font-semibold">계정 상세 정보</h2>
              <button
                className="text-gray-500 hover:text-gray-700"
                onClick={() => setShowDetail(false)}
              >
                ✕
              </button>
            </div>
            {selectedAccount && (
              <div className="space-y-6">
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <h3 className="font-medium">고객명</h3>
                    <p>{selectedAccount.customerName}</p>
                  </div>
                  <div>
                    <h3 className="font-medium">계좌번호</h3>
                    <p>{selectedAccount.accountNumber}</p>
                  </div>
                  <div>
                    <h3 className="font-medium">상태</h3>
                    <p>{selectedAccount.status}</p>
                  </div>
                  <div>
                    <h3 className="font-medium">등록일</h3>
                    <p>{selectedAccount.registrationDate}</p>
                  </div>
                </div>
                
                <div>
                  <h3 className="font-medium mb-2">최근 거래 내역</h3>
                  <table className="min-w-full">
                    <thead className="bg-gray-50">
                      <tr>
                        <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">날짜</th>
                        <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">유형</th>
                        <th className="px-6 py-3 text-left text-sm font-medium text-gray-500">금액</th>
                      </tr>
                    </thead>
                    <tbody className="divide-y divide-gray-200">
                      {selectedAccount.recentTransactions.map((transaction, idx) => (
                        <tr key={idx}>
                          <td className="px-6 py-4 text-sm">{transaction.date}</td>
                          <td className="px-6 py-4 text-sm">{transaction.type}</td>
                          <td className="px-6 py-4 text-sm">{transaction.amount.toLocaleString()}원</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  );
};

export default CustomerAccountManagement;

// 지갑검색
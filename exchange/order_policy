import React, { useState } from 'react';
import { Search, Clock, Settings, TrendingUp, DollarSign, ShoppingCart } from 'lucide-react';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';

// 정책 탭 컴포넌트
const PolicyTab = ({ label, icon: Icon, isActive, onClick }) => (
  <button
    className={`px-4 py-2 flex items-center gap-2 font-medium ${
      isActive 
        ? 'text-blue-600 border-b-2 border-blue-600' 
        : 'text-gray-500 hover:text-gray-700'
    }`}
    onClick={onClick}
  >
    <Icon size={16} />
    {label}
  </button>
);

// 검색 필터 컴포넌트
const SearchFilter = ({ label, type = "text", value, onChange, options = [] }) => (
  <div>
    <label className="block text-sm font-medium text-gray-700 mb-1">
      {label}
    </label>
    {type === "select" ? (
      <select
        className="w-full p-2 border rounded"
        value={value}
        onChange={onChange}
      >
        {options.map(option => (
          <option key={option.value} value={option.value}>
            {option.label}
          </option>
        ))}
      </select>
    ) : (
      <input
        type={type}
        className="w-full p-2 border rounded"
        value={value}
        onChange={onChange}
        placeholder={`${label} 입력`}
      />
    )}
  </div>
);

const OrderPolicyManagement = () => {
  // 상태 관리
  const [activeTab, setActiveTab] = useState('tradingTime');
  const [selectedItem, setSelectedItem] = useState(null);
  const [searchFilters, setSearchFilters] = useState({
    itemName: '',
    issuerName: '',
    itemCode: '',
    status: ''
  });

  // 샘플 데이터
  const items = [
    {
      id: 'ITM001',
      itemName: 'BTS-Dynamite',
      itemCode: 'MUS001',
      issuerName: '뮤직카우',
      status: '상장'
    },
    {
      id: 'ITM002',
      itemName: 'Solar Panel A',
      itemCode: 'GRN002',
      issuerName: '파이브노드',
      status: '비상장'
    }
  ];

  // 필터링된 데이터
  const filteredItems = items.filter(item => {
    if (searchFilters.itemName && !item.itemName.includes(searchFilters.itemName)) return false;
    if (searchFilters.issuerName && !item.issuerName.includes(searchFilters.issuerName)) return false;
    if (searchFilters.itemCode && !item.itemCode.includes(searchFilters.itemCode)) return false;
    if (searchFilters.status && item.status !== searchFilters.status) return false;
    return true;
  });

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <Card className="max-w-6xl mx-auto">
        <CardHeader>
          <CardTitle>거래 정책</CardTitle>
        </CardHeader>
        <CardContent>
          {/* 검색 필터 */}
          <div className="grid grid-cols-4 gap-4 mb-6">
            <SearchFilter
              label="종목명"
              value={searchFilters.itemName}
              onChange={(e) => setSearchFilters({
                ...searchFilters,
                itemName: e.target.value
              })}
            />
            <SearchFilter
              label="발행인명"
              value={searchFilters.issuerName}
              onChange={(e) => setSearchFilters({
                ...searchFilters,
                issuerName: e.target.value
              })}
            />
            <SearchFilter
              label="종목 코드"
              value={searchFilters.itemCode}
              onChange={(e) => setSearchFilters({
                ...searchFilters,
                itemCode: e.target.value
              })}
            />
            <SearchFilter
              label="상태"
              type="select"
              value={searchFilters.status}
              onChange={(e) => setSearchFilters({
                ...searchFilters,
                status: e.target.value
              })}
              options={[
                { value: '', label: '전체' },
                { value: '상장', label: '상장' },
                { value: '비상장', label: '비상장' }
              ]}
            />
          </div>

          {/* 검색 결과 테이블 */}
          <div className="border rounded-lg overflow-hidden mb-6">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">종목명</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">종목 코드</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">발행인명</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">상태</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {filteredItems.map((item) => (
                  <tr 
                    key={item.id}
                    className={`hover:bg-gray-50 cursor-pointer ${
                      selectedItem?.id === item.id ? 'bg-blue-50' : ''
                    }`}
                    onClick={() => setSelectedItem(item)}
                  >
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                      {item.itemName}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {item.itemCode}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {item.issuerName}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {item.status}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          {/* 정책 설정 섹션 */}
          {selectedItem && (
            <div className="border-t pt-6 space-y-6">
              <div className="flex items-center justify-between">
                <h3 className="text-lg font-medium">정책 설정: {selectedItem.itemName}</h3>
                <span className="text-sm text-gray-500">종목 코드: {selectedItem.itemCode}</span>
              </div>

              {/* 정책 탭 */}
              <div className="border-b">
                <div className="flex gap-4">
                  <PolicyTab
                    label="거래 시간"
                    icon={Clock}
                    isActive={activeTab === 'tradingTime'}
                    onClick={() => setActiveTab('tradingTime')}
                  />
                  <PolicyTab
                    label="주문 단위"
                    icon={Settings}
                    isActive={activeTab === 'orderUnit'}
                    onClick={() => setActiveTab('orderUnit')}
                  />
                  <PolicyTab
                    label="가격 제한폭"
                    icon={TrendingUp}
                    isActive={activeTab === 'priceLimit'}
                    onClick={() => setActiveTab('priceLimit')}
                  />
                  <PolicyTab
                    label="기준가격"
                    icon={DollarSign}
                    isActive={activeTab === 'basePrice'}
                    onClick={() => setActiveTab('basePrice')}
                  />
                  <PolicyTab
                    label="주문 룰"
                    icon={ShoppingCart}
                    isActive={activeTab === 'orderRules'}
                    onClick={() => setActiveTab('orderRules')}
                  />
                </div>
              </div>

              {/* 정책 설정 내용 */}
              <div className="p-4 bg-gray-50 rounded-lg space-y-6">
                {activeTab === 'tradingTime' && (
                  <div className="space-y-4">
                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">시작 시간</label>
                        <input
                          type="time"
                          className="w-full p-2 border rounded"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">종료 시간</label>
                        <input
                          type="time"
                          className="w-full p-2 border rounded"
                        />
                      </div>
                    </div>
                    <div>
                      <label className="flex items-center gap-2">
                        <input type="checkbox" className="rounded" />
                        <span className="text-sm text-gray-700">휴일 휴장 여부</span>
                      </label>
                    </div>
                  </div>
                )}
                
                {activeTab === 'orderUnit' && (
                  <div className="flex items-center gap-2">
                    <div className="flex-1">
                      <label className="block text-sm font-medium text-gray-700 mb-1">주문 단위</label>
                      <div className="flex gap-2">
                        <input
                          type="number"
                          className="flex-1 p-2 border rounded"
                          placeholder="숫자 입력"
                        />
                        <select className="w-24 p-2 border rounded">
                          <option value="KRW">원</option>
                          <option value="USD">USD</option>
                        </select>
                      </div>
                    </div>
                  </div>
                )}
                
                {activeTab === 'priceLimit' && (
                  <div className="space-y-4">
                    <div className="flex items-center gap-2">
                      <label className="w-20 text-sm font-medium text-gray-700">상한폭</label>
                      <input
                        type="number"
                        className="w-32 p-2 border rounded"
                        placeholder="숫자 입력"
                      />
                      <span className="text-sm text-gray-700">%</span>
                    </div>
                    <div className="flex items-center gap-2">
                      <label className="w-20 text-sm font-medium text-gray-700">하한폭</label>
                      <input
                        type="number"
                        className="w-32 p-2 border rounded"
                        placeholder="숫자 입력"
                      />
                      <span className="text-sm text-gray-700">%</span>
                    </div>
                  </div>
                )}
                
                {activeTab === 'basePrice' && (
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">기준가격 설정</label>
                    <select className="w-full p-2 border rounded">
                      <option value="previousClose">전일 종가</option>
                      <option value="currentPrice">현재가</option>
                    </select>
                  </div>
                )}
                
                {activeTab === 'orderRules' && (
                  <div className="bg-gray-50 p-4 rounded-lg space-y-4">
                    {/* 주문 룰 수식 입력 */}
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-1">주문 룰 수식</label>
                      <input
                        type="text"
                        className="w-full p-2 border rounded"
                        placeholder="수식 입력"
                      />
                    </div>

                    {/* 거래수수료 입력 */}
                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-1">거래수수료</label>
                      <div className="flex items-center gap-2">
                        <input
                          type="number"
                          step="0.0001"
                          min="0"
                          max="100"
                          className="w-32 p-2 border rounded"
                          placeholder="0.0000"
                        />
                        <span className="text-sm text-gray-700">%</span>
                      </div>
                      <p className="text-xs text-gray-500 mt-1">소수점 넷째자리까지 입력 가능</p>
                    </div>

                    {/* 저장 버튼 */}
                    <div className="flex justify-end pt-4">
                      <button
                        className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
                        onClick={() => {
                          console.log('Save order rules');
                          // 저장 로직 구현
                        }}
                      >
                        저장
                      </button>
                    </div>
                  </div>
                )}

                {/* 저장 버튼 */}
                <div className="flex justify-end pt-4">
                  <button
                    className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
                    onClick={() => {
                      console.log('Save policy settings');
                      // 저장 로직 구현
                    }}
                  >
                    저장
                  </button>
                </div>
              </div>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default OrderPolicyManagement;

// 거래 정책
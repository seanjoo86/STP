import React, { useState } from 'react';
import { Search, Bell, AlertTriangle, Lock, Settings } from 'lucide-react';
import { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';

const MarketSurveillance = () => {
  const [activeTab, setActiveTab] = useState('circuit');
  const [selectedItem, setSelectedItem] = useState(null);
  const [searchFilters, setSearchFilters] = useState({
    itemName: '',
    issuerName: '',
    itemCode: '',
    status: ''
  });

  // 샘플 데이터
  const items = [
    {
      id: 'ITM001',
      itemName: 'BTS-Dynamite',
      itemCode: 'MUS001',
      issuerName: '뮤직카우',
      status: '상장',
      circuitBreaker: {
        priceLimit: 10,
        volumeLimit: 200,
        duration: 30,
        action: 'suspend'
      }
    },
    {
      id: 'ITM002',
      itemName: 'Solar Panel A',
      itemCode: 'GRN002',
      issuerName: '파이브노드',
      status: '상장',
      circuitBreaker: null
    }
  ];

  // 서킷브레이커 이력 데이터
  const circuitHistory = [
    {
      id: 'CB001',
      itemName: 'BTS-Dynamite',
      triggerTime: '2024-01-15 14:30:00',
      triggerType: '가격 변동률',
      triggerValue: '+12%',
      action: '거래 정지',
      status: '종료'
    }
  ];

  const PolicyTab = ({ label, icon: Icon, isActive, onClick }) => (
    <button
      className={`px-4 py-2 flex items-center gap-2 font-medium ${
        isActive 
          ? 'text-blue-600 border-b-2 border-blue-600' 
          : 'text-gray-500 hover:text-gray-700'
      }`}
      onClick={onClick}
    >
      <Icon size={16} />
      {label}
    </button>
  );

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <Card className="max-w-6xl mx-auto">
        <CardHeader>
          <CardTitle>시장 감시</CardTitle>
        </CardHeader>
        <CardContent>
          {/* 검색 필터 */}
          <div className="grid grid-cols-4 gap-4 mb-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                종목명
              </label>
              <input
                type="text"
                className="w-full p-2 border rounded"
                value={searchFilters.itemName}
                onChange={(e) => setSearchFilters({
                  ...searchFilters,
                  itemName: e.target.value
                })}
                placeholder="종목명 입력"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                발행인명
              </label>
              <input
                type="text"
                className="w-full p-2 border rounded"
                value={searchFilters.issuerName}
                onChange={(e) => setSearchFilters({
                  ...searchFilters,
                  issuerName: e.target.value
                })}
                placeholder="발행인명 입력"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                종목 코드
              </label>
              <input
                type="text"
                className="w-full p-2 border rounded"
                value={searchFilters.itemCode}
                onChange={(e) => setSearchFilters({
                  ...searchFilters,
                  itemCode: e.target.value
                })}
                placeholder="종목 코드 입력"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                상태
              </label>
              <select
                className="w-full p-2 border rounded"
                value={searchFilters.status}
                onChange={(e) => setSearchFilters({
                  ...searchFilters,
                  status: e.target.value
                })}
              >
                <option value="">전체</option>
                <option value="상장">상장</option>
                <option value="비상장">비상장</option>
              </select>
            </div>
          </div>

          {/* 검색 결과 테이블 */}
          <div className="border rounded-lg overflow-hidden mb-6">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">종목명</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">종목 코드</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">발행인명</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">상태</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">서킷브레이커</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {items.map((item) => (
                  <tr 
                    key={item.id}
                    className={`hover:bg-gray-50 cursor-pointer ${
                      selectedItem?.id === item.id ? 'bg-blue-50' : ''
                    }`}
                    onClick={() => setSelectedItem(item)}
                  >
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                      {item.itemName}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {item.itemCode}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {item.issuerName}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {item.status}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {item.circuitBreaker ? '설정됨' : '미설정'}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          {/* 감시 정책 설정 섹션 */}
          {selectedItem && (
            <div className="border-t pt-6 space-y-6">
              <div className="flex items-center justify-between">
                <h3 className="text-lg font-medium">감시 정책 설정: {selectedItem.itemName}</h3>
                <span className="text-sm text-gray-500">종목 코드: {selectedItem.itemCode}</span>
              </div>

              {/* 정책 탭 */}
              <div className="border-b">
                <div className="flex gap-4">
                  <PolicyTab
                    label="서킷브레이커"
                    icon={AlertTriangle}
                    isActive={activeTab === 'circuit'}
                    onClick={() => setActiveTab('circuit')}
                  />
                  <PolicyTab
                    label="거래 정지"
                    icon={Lock}
                    isActive={activeTab === 'suspend'}
                    onClick={() => setActiveTab('suspend')}
                  />
                  <PolicyTab
                    label="정리매매"
                    icon={Settings}
                    isActive={activeTab === 'liquidation'}
                    onClick={() => setActiveTab('liquidation')}
                  />
                </div>
              </div>

              {/* 서킷브레이커 설정 */}
              {/* 서킷브레이커 설정 */}
              {activeTab === 'circuit' && (
                <div className="space-y-6">
                  <div className="bg-gray-50 p-4 rounded-lg space-y-4">
                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">가격 변동률 (±%)</label>
                        <input
                          type="number"
                          className="w-full p-2 border rounded"
                          placeholder="예: 10"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">거래량 변화율 (%)</label>
                        <input
                          type="number"
                          className="w-full p-2 border rounded"
                          placeholder="예: 200"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">발동 기간 (분)</label>
                        <input
                          type="number"
                          className="w-full p-2 border rounded"
                          placeholder="예: 30"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">조치 유형</label>
                        <select className="w-full p-2 border rounded">
                          <option value="suspend">거래 정지</option>
                          <option value="warning">경고</option>
                          <option value="limited">제한적 거래 허용</option>
                        </select>
                      </div>
                    </div>

                    <div className="flex justify-end">
                      <button
                        className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
                        onClick={() => {
                          // 저장 로직 구현
                          console.log('Save circuit breaker settings');
                        }}
                      >
                        저장
                      </button>
                    </div>
                  </div>

                  {/* 발동 이력 */}
                  <div>
                    <h4 className="text-md font-medium mb-2">발동 이력</h4>
                    <div className="border rounded-lg overflow-hidden">
                      <table className="min-w-full divide-y divide-gray-200">
                        <thead className="bg-gray-50">
                          <tr>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">발동 시각</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">발동 조건</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">발동값</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">조치</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">상태</th>
                          </tr>
                        </thead>
                        <tbody className="bg-white divide-y divide-gray-200">
                          {circuitHistory.map((history) => (
                            <tr key={history.id}>
                              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {history.triggerTime}
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {history.triggerType}
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {history.triggerValue}
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {history.action}
                              </td>
                              <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                {history.status}
                              </td>
                            </tr>
                          ))}
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              )}

              {/* 거래 정지 설정 */}
              {activeTab === 'suspend' && (
                <div className="space-y-6">
                  <div className="bg-gray-50 p-4 rounded-lg space-y-4">
                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">정지 시작일</label>
                        <input
                          type="date"
                          className="w-full p-2 border rounded"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">정지 종료일</label>
                        <input
                          type="date"
                          className="w-full p-2 border rounded"
                        />
                      </div>
                      <div className="col-span-2">
                        <label className="block text-sm font-medium text-gray-700 mb-1">정지 사유</label>
                        <select className="w-full p-2 border rounded mb-2">
                          <option value="">정지 사유 선택</option>
                          <option value="abnormal_trade">비정상 거래 발생</option>
                          <option value="disclosure_delay">공시 지연</option>
                          <option value="market_stability">시장 안정성 확보</option>
                          <option value="others">기타</option>
                        </select>
                        <textarea
                          className="w-full p-2 border rounded h-24"
                          placeholder="상세 사유를 입력하세요"
                        />
                      </div>
                    </div>

                    <div className="flex justify-end gap-2">
                      <button
                        className="px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700"
                      >
                        거래 정지
                      </button>
                      <button
                        className="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700"
                      >
                        정지 해제
                      </button>
                    </div>
                  </div>

                  {/* 거래 정지 이력 */}
                  <div>
                    <h4 className="text-md font-medium mb-2">거래 정지 이력</h4>
                    <div className="border rounded-lg overflow-hidden">
                      <table className="min-w-full divide-y divide-gray-200">
                        <thead className="bg-gray-50">
                          <tr>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">정지 일자</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">해제 일자</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">사유</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">상태</th>
                          </tr>
                        </thead>
                        <tbody className="bg-white divide-y divide-gray-200">
                          <tr>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2024-01-15</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2024-01-16</td>
                            <td className="px-6 py-4 text-sm text-gray-500">비정상 거래 발생</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">해제됨</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              )}

              {/* 정리매매 설정 */}
              {activeTab === 'liquidation' && (
                <div className="space-y-6">
                  <div className="bg-gray-50 p-4 rounded-lg space-y-4">
                    <div className="grid grid-cols-2 gap-4">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">정리매매 시작일</label>
                        <input
                          type="date"
                          className="w-full p-2 border rounded"
                        />
                      </div>
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">정리매매 종료일</label>
                        <input
                          type="date"
                          className="w-full p-2 border rounded"
                        />
                      </div>
                      <div className="col-span-2">
                        <label className="block text-sm font-medium text-gray-700 mb-1">개시 사유</label>
                        <select className="w-full p-2 border rounded mb-2">
                          <option value="">사유 선택</option>
                          <option value="delisting">상장폐지</option>
                          <option value="merger">합병</option>
                          <option value="split">분할</option>
                          <option value="others">기타</option>
                        </select>
                        <textarea
                          className="w-full p-2 border rounded h-24"
                          placeholder="상세 사유를 입력하세요"
                        />
                      </div>
                    </div>

                    <div className="flex justify-end gap-2">
                      <button
                        className="px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700"
                      >
                        정리매매 개시
                      </button>
                      <button
                        className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
                      >
                        정리매매 종료
                      </button>
                    </div>
                  </div>

                  {/* 정리매매 이력 */}
                  <div>
                    <h4 className="text-md font-medium mb-2">정리매매 이력</h4>
                    <div className="border rounded-lg overflow-hidden">
                      <table className="min-w-full divide-y divide-gray-200">
                        <thead className="bg-gray-50">
                          <tr>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">개시 일자</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">종료 일자</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">사유</th>
                            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">상태</th>
                          </tr>
                        </thead>
                        <tbody className="bg-white divide-y divide-gray-200">
                          <tr>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2024-01-10</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2024-01-20</td>
                            <td className="px-6 py-4 text-sm text-gray-500">상장폐지</td>
                            <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">진행중</td>
                          </tr>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              )}
              
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
};

export default MarketSurveillance;

// 시장 감시